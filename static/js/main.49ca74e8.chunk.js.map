{"version":3,"sources":["components/textarea.jsx","components/checkbox.jsx","components/instrument-menu.jsx","components/TrackPianoRoll/MeasureNum/index.jsx","components/TrackPianoRoll/PianoKey/index.jsx","components/TrackPianoRoll/PianoNote/NoteResize/index.jsx","components/TrackPianoRoll/PianoNote/index.jsx","components/TrackPianoRoll/index.jsx","components/tracksDropdown.jsx","components/editorarea.jsx","api/track.js","api/note.js","api/readText.js","api/updateText.js","app.jsx","index.js"],"names":["Text","document","getElementById","addEventListener","event","which","shiftKey","preventDefault","props","parseText","target","value","id","this","text","onChange","setText","React","Component","Checkbox","label","type","name","passInfo","checked","htmlFor","InstrumentMenu","instruments","map","instrument","setCurrInstr","createCheckboxes","trackLength","e","changeTrackLength","measureLength","changeMeasureLength","MeasureNum","numOfMeasures","measureLen","measures","className","style","gridColumn","i","numToName","1","2","3","4","5","6","7","8","9","10","11","12","PianoKey","getNoteName","note","octave","gridRow","Math","abs","PIANO_ROLL_HEIGHT","NoteResize","length","setNoteLength","inc","changeAmount","marginLeft","onClick","marginRight","width","fontWeight","color","fontSize","display","alignItems","PianoNote","noteInfo","index","removeNote","setDraggedNote","newSetNoteLength","onContextMenu","onDragStart","location","parseInt","Object","entries","find","toUpperCase","sharp","draggable","TrackPianoRoll","track","tracks","addNote","replaceNote","useState","draggedNote","onGridDragOver","gridTemplateRows","gridTemplateColumns","track_length","measure_length","pianoKeys","j","push","renderPianoKeys","pianoGrids","isRight","k","borderStyling","notes","ceil","onGridClick","onDragOver","onDrop","onGridDrop","borderRight","renderGrid","key","TracksDropdown","trackId","currTrack","setCurrTrack","renderTrackOptions","Editor","Track","volume","octave_start","default_length","setInstrument","newTrack","MAX_TRACK_NUM","Note","Parser","state","split","indexOf","num","tempo","currOctave","start","n","isRest","undefined","Updater","notesExist","getInstrument","noteToLength","str","chr","substring","App","setState","updateText","selectedInstrument","pitch","toLowerCase","splice","parse","update","example","ReactDOM","render"],"mappings":"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","file":"static/js/main.49ca74e8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Text extends React.Component {\r\n\r\n    //A listener!!!!\r\n    componentDidMount() {\r\n        document.getElementById(\"text\").addEventListener(\"keypress\", (event) => {\r\n            if(event.which === 13 && !event.shiftKey){\r\n                event.preventDefault();\r\n                this.props.parseText(event.target.value); //Send text to parser\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"textarea\">\r\n            <textarea id=\"text\" value={this.props.text} onChange={this.props.setText}/>\r\n        </div>);\r\n      }\r\n}\r\n\r\nexport default Text;","import React from 'react';\r\n\r\nclass Checkbox extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id={this.props.label + \"Checkbox\"} >\r\n                <input \r\n                    type={this.props.type} \r\n                    id={this.props.label} \r\n                    name={this.props.name} \r\n                    onChange={() => this.props.passInfo(this.props.label)} \r\n                    checked={this.props.checked}/>\r\n                <label htmlFor={this.props.label}>{this.props.label}</label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Checkbox","import React from 'react';\r\n\r\nimport Checkbox from \"./checkbox\";\r\n\r\nclass InstrumentMenu extends React.Component {\r\n\r\n    createCheckboxes() {\r\n        return this.props.instruments.map(\r\n            instrument => <Checkbox \r\n                key={instrument}\r\n                label={instrument} \r\n                type=\"radio\" \r\n                name=\"instruments\" \r\n                passInfo={() => this.props.setCurrInstr(instrument)} \r\n                checked={instrument === this.props.instrument}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"InstrumentMenuContainer\">\r\n                <div>\r\n                    <h3>Instruments</h3>\r\n                    <form id=\"InstrumentMenuForm\">\r\n                        {this.createCheckboxes()}\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    <h3>Track Length</h3>\r\n                    <input type=\"number\" value={this.props.trackLength} onChange={(e) => { this.props.changeTrackLength(e.target.value); }}></input>\r\n                </div>\r\n                <div>\r\n                    <h3>Measure Length</h3>\r\n                    <input type=\"number\" value={this.props.measureLength} onChange={(e) => { this.props.changeMeasureLength(e.target.value); }}></input>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InstrumentMenu;","const MeasureNum = ({\r\n  numOfMeasures,\r\n  measureLen = 4,\r\n}) => {\r\n  let measures = [(\r\n    <div\r\n      className=\"measureHeader\"\r\n      style={{ gridColumn: '1' }}\r\n    ></div>\r\n  )];\r\n\r\n  for (let i = 0; i < numOfMeasures; i++) {\r\n    measures[i + 1] = (\r\n      <div\r\n        className=\"measureHeader\"\r\n        style={{ gridColumn: `${i * measureLen * 4 + 2} / span ${measureLen * 4}` }}\r\n      >{i + 1}</div>\r\n    );\r\n  }\r\n\r\n  return measures;\r\n}\r\n\r\nexport default MeasureNum;\r\n","import React from 'react';\r\n\r\nimport { PIANO_ROLL_HEIGHT } from '../index';\r\n\r\nexport const numToName = {\r\n  1: 'C',\r\n  2: 'C#',\r\n  3: 'D',\r\n  4: 'D#',\r\n  5: 'E',\r\n  6: 'F',\r\n  7: 'F#',\r\n  8: 'G',\r\n  9: 'G#',\r\n  10: 'A',\r\n  11: 'A#',\r\n  12: 'B',\r\n};\r\n\r\nclass PianoKey extends React.Component {\r\n  getNoteName = () => {\r\n    if (this.props.note === 1) return <div className=\"keyText\">C{this.props.octave}</div>;\r\n    return <div className=\"keyText\">{numToName[this.props.note]}</div>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`pianoKey${numToName[this.props.note]}`}\r\n        style={{ gridRow: Math.abs((this.props.note + (this.props.octave - 1) * 12) - PIANO_ROLL_HEIGHT - 1) + 1 }}\r\n      >\r\n        {this.getNoteName()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PianoKey;\r\n","const NoteResize = ({\r\n  length,\r\n  setNoteLength,\r\n  inc,\r\n  changeAmount,\r\n  text,\r\n  marginLeft,\r\n}) => {\r\n  const onClick = () => {\r\n    const newLen = inc ? length + changeAmount : length - changeAmount;\r\n    setNoteLength(newLen);\r\n  }\r\n\r\n  return (\r\n    <div onClick={onClick} style={{ marginLeft: marginLeft ? 'auto' : '2px', marginRight: '2px', width: 'auto', fontWeight: 'bold', color: 'white', fontSize: '12px', display: 'flex', alignItems: 'center', }}>\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteResize;\r\n","import React from 'react';\r\nimport { PIANO_ROLL_HEIGHT } from '..';\r\nimport NoteResize from './NoteResize';\r\nimport { numToName } from '../PianoKey';\r\n\r\nconst PianoNote = ({\r\n  noteInfo,\r\n  index,\r\n  removeNote,\r\n  setDraggedNote,\r\n  setNoteLength,\r\n}) => {\r\n  const onContextMenu = (e) => {\r\n    e.preventDefault();\r\n    removeNote(index);\r\n  };\r\n\r\n  const newSetNoteLength = (length) => {\r\n    setNoteLength(length, index);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"trackPianoNote\"\r\n      key={index}\r\n      onContextMenu={onContextMenu}\r\n      onDragStart={() => { setDraggedNote({ note: noteInfo, index }); }}\r\n      style={{\r\n        gridColumn: `${noteInfo.location + 1} / span ${noteInfo.length}`,\r\n        gridRow: `${Math.abs(parseInt(Object.entries(numToName).find(name => name[1] === `${noteInfo.note.toUpperCase()[0]}${noteInfo.sharp ? '#' : ''}`)[0]) + (noteInfo.octave - 1) * 12 - PIANO_ROLL_HEIGHT) + 2}\r\n          / span 1`,\r\n      }}\r\n      draggable\r\n    >\r\n      {noteInfo.length > 4 ? <NoteResize\r\n        length={noteInfo.length}\r\n        setNoteLength={newSetNoteLength}\r\n        inc={false}\r\n        changeAmount={4}\r\n        text={'<<'}\r\n        marginLeft={false}\r\n      /> : null}\r\n      <NoteResize\r\n        length={noteInfo.length}\r\n        setNoteLength={newSetNoteLength}\r\n        inc={false}\r\n        changeAmount={1}\r\n        text={'<'}\r\n        marginLeft={false}\r\n      />\r\n      <NoteResize\r\n        length={noteInfo.length}\r\n        setNoteLength={newSetNoteLength}\r\n        inc={true}\r\n        changeAmount={1}\r\n        text={'>'}\r\n        marginLeft={true}\r\n      />\r\n      {noteInfo.length > 3 ? <NoteResize\r\n        length={noteInfo.length}\r\n        setNoteLength={newSetNoteLength}\r\n        inc={true}\r\n        changeAmount={4}\r\n        text={'>>'}\r\n        marginLeft={false}\r\n      /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PianoNote;\r\n","import React, { useState } from 'react';\r\n\r\nimport MeasureNum from './MeasureNum';\r\nimport PianoKey from './PianoKey';\r\nimport PianoNote from './PianoNote';\r\n\r\nexport const PIANO_ROLL_HEIGHT = 72;\r\n\r\nconst TrackPianoRoll = ({\r\n  track,\r\n  tracks,\r\n  addNote,\r\n  removeNote,\r\n  replaceNote,\r\n  setNoteLength,\r\n}) => {\r\n  const [ draggedNote, setDraggedNote ] = useState(null);\r\n\r\n  const onGridClick = (i, j) => {\r\n    const location = i;\r\n\r\n    for (let i = 0; i < tracks[track].notes.length; i += 1) {\r\n      if (tracks[track].notes[i].location <= location + 3\r\n        && tracks[track].notes[i].location + tracks[track].notes[i].length - 1 >= location) return;\r\n    }\r\n\r\n    const note = Math.abs(j % 12 - 13) === 13 ? 1 : Math.abs(j % 12 - 13);\r\n    const octave = Math.abs(Math.ceil(j / 12) - 7);\r\n    addNote(location, note, octave);\r\n  };\r\n\r\n  const onGridDragOver = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const onGridDrop = (e, i, j) => {\r\n    e.preventDefault();\r\n    if (!draggedNote) return;\r\n    const location = i;\r\n\r\n    for (let i = 0; i < tracks[track].notes.length; i += 1) {\r\n      if (i !== draggedNote.index && tracks[track].notes[i].location <= location + draggedNote.note.length - 1\r\n        && tracks[track].notes[i].location + tracks[track].notes[i].length - 1 >= location) return;\r\n    }\r\n\r\n    draggedNote.note.location = location;\r\n    draggedNote.note.note = Math.abs(j % 12 - 13) === 13 ? 1 : Math.abs(j % 12 - 13);\r\n    draggedNote.note.octave = Math.abs(Math.ceil(j / 12) - 7);\r\n    replaceNote(draggedNote);\r\n    setDraggedNote(null);\r\n  }\r\n\r\n  const renderGrid = () => {\r\n    const pianoGrids = [];\r\n    for (let i = 2; i <= (tracks[track].track_length * tracks[track].measure_length) + 1; i++) {\r\n      for (let j = 2; j <= PIANO_ROLL_HEIGHT + 1; j++) {\r\n        const isRight = (i - 2) % tracks[track].measure_length === tracks[track].measure_length - 1;\r\n        for (let k = 0; k < 4; k++) {\r\n          let borderStyling = '1px solid black';\r\n          if (isRight && k === 3) borderStyling = '4px solid black';\r\n          else if (k === 3) borderStyling = '2px solid black';\r\n          pianoGrids.push((\r\n            <div\r\n              className=\"trackPianoRollGrid\"\r\n              onClick={() => { onGridClick((i - 2) * 4 + 1 + k, j - 1); }}\r\n              onDragOver={onGridDragOver}\r\n              onDrop={(e) => { onGridDrop(e, (i - 2) * 4 + 1 + k, j - 1) }}\r\n              style={{\r\n                gridRow: `${j}`,\r\n                gridColumn: `${(i - 2) * 4 + 2 + k}`,\r\n                borderRight: borderStyling,\r\n              }}\r\n            ></div>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n    return pianoGrids;\r\n  };\r\n\r\n  const renderPianoKeys = () => {\r\n    const pianoKeys = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n      for (let j = 1; j <= 6; j++) {\r\n        pianoKeys.push(<PianoKey note={i} octave={j} />);\r\n      }\r\n    }\r\n    return pianoKeys;\r\n  }\r\n\r\n  const renderNotes = () => tracks[track].notes.map((note, key) => note ? <PianoNote noteInfo={note} index={key} removeNote={removeNote} setDraggedNote={setDraggedNote} setNoteLength={setNoteLength} /> : null);\r\n\r\n  return tracks[track] ? (\r\n    <div\r\n      className=\"trackPianoRoll\"\r\n      style={{\r\n        gridTemplateRows: `repeat(${PIANO_ROLL_HEIGHT}, 8.2%)`,\r\n        gridTemplateColumns: `20% repeat(${tracks[track].track_length * tracks[track].measure_length * 4}, 5%)`,\r\n      }}\r\n    >\r\n      <MeasureNum numOfMeasures={tracks[track].track_length} measureLen={tracks[track].measure_length} />\r\n      {renderPianoKeys()}\r\n      {renderGrid()}\r\n      {renderNotes()}\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default TrackPianoRoll;\r\n","import React from 'react';\r\n\r\nclass TracksDropdown extends React.Component {\r\n\r\n  renderTrackOptions() {\r\n    return this.props.tracks.map(\r\n      track => <option key={track.trackId} value={track.trackId}> \r\n        Track {track.trackId} \r\n      </option>);\r\n  }\r\n\r\n  render() {\r\n    \r\n    return(\r\n      <select value={this.props.currTrack} onChange={(e) => {\r\n          e.preventDefault();\r\n          this.props.setCurrTrack(parseInt(e.target.value));\r\n        }}>\r\n        {this.renderTrackOptions()}\r\n      </select >\r\n    );\r\n  }\r\n}\r\n\r\nexport default TracksDropdown;\r\n","import React from \"react\";\r\n\r\nimport InstrumentMenu from './instrument-menu'\r\nimport TrackPianoRoll from \"./TrackPianoRoll\";\r\nimport TracksDropdown from \"./tracksDropdown\";\r\n\r\nclass Editor extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"editorarea\">\r\n        <TracksDropdown\r\n          tracks={this.props.tracks}\r\n          currTrack={this.props.currTrack}\r\n\r\n          setCurrTrack={this.props.setCurrTrack}\r\n        />\r\n\r\n        <TrackPianoRoll\r\n          track={this.props.currTrack}\r\n          tracks={this.props.tracks}\r\n          addNote={this.props.addNote}\r\n          removeNote={this.props.removeNote}\r\n          replaceNote={this.props.replaceNote}\r\n          setNoteLength={this.props.setNoteLength}\r\n        />\r\n\r\n        <div style={{ display: 'flex' }}>\r\n          <InstrumentMenu\r\n            instruments={this.props.instruments}\r\n            instrument={this.props.tracks[this.props.currTrack].instrument}\r\n            trackLength={this.props.tracks[this.props.currTrack].track_length}\r\n            measureLength={this.props.tracks[this.props.currTrack].measure_length}\r\n\r\n            setCurrInstr={this.props.setCurrInstr}\r\n            changeTrackLength={this.props.changeTrackLength}\r\n            changeMeasureLength={this.props.changeMeasureLength}\r\n          />\r\n          {/* <div style={{ flexGrow: '1fr', padding: '20px', fontSize: '16px', textAlign: 'left' }}>\r\n            <div>PIANO ROLL INSTRUCTIONS:</div>\r\n            <ul>\r\n              <li>To place a note, click on the rectangle you would like to place the note on.</li>\r\n              <li>To move a note, click and drag the note from one rectangle to another.</li>\r\n              <li>To increase the length of a note, press the right arrow on the note.</li>\r\n              <li>To decrease the length of a note, press the left arrow on the note.</li>\r\n              <li>To delete a note, right click it.</li>\r\n            </ul>\r\n          </div> */}\r\n        </div>\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default Editor;","// class Loop {\r\n//     notes = []; //List of notes in this loop.\r\n//     iterations = 1; //Amount of times it loops.\r\n// }\r\n\r\nclass Track {\r\n  static MAX_TRACK_NUM = 8; // tracks are numbered 0-7\r\n  trackId = 0;\r\n  notes = [];\r\n  // loops = []; //Notes but also loops because there are loops. (Loops can't be nested so yay (regular ones at least))\r\n  instrument = 'Flute' //@0 @1 @3 @8 @9 respectiveley\r\n  volume = 255; //0-255\r\n  octave_start = 1; //1-6\r\n  default_length = -1; //1,2,4,8,16,32,64 This is an optional value, if not specified, it should be -1.\r\n\r\n  track_length = 6; // for UI uses only; changes the amount of measures created in the piano roll\r\n  measure_length = 4; // also for UI uses only; it wasn't difficult to implement at all, and it organizes the piano roll a bit\r\n\r\n  //Track data minipulation functions go here.\r\n\r\n  constructor(id) {\r\n    this.trackId = id;\r\n      //Make some notes probably?\r\n      //Might not have to because it starts out empty anyway.\r\n  }\r\n\r\n  setInstrument = (instrument) => {\r\n    const newTrack = this;\r\n    newTrack.instrument = instrument;\r\n    return newTrack;\r\n  }\r\n}\r\n\r\nexport default Track;","class Note {\r\n    //For note to text conversion: Have a current octave variable and compare for proper placement of the < and > symbols.\r\n    location = 1; // measured in eighth notes (for you heathens (looking at you Charlie), that's the small column in the piano roll)\r\n        // basically, which column is it in on the piano roll\r\n    note = 'c'; //Valid values: c, d, e, f, g, a, b, r(rest)\r\n    sharp = false;\r\n    length = 1; //1,2,4,8,16,32,64\r\n    octave = 5; //Valid values: 1-6\r\n}\r\n  \r\nexport default Note;","import Note from \"./note.js\";\r\n\r\nclass Parser {\r\n    static parse(state, text) {\r\n        var tracks = text.split(\"#\");\r\n\r\n        for (let i = 2; i < tracks.length; i++) {\r\n            var track = parseInt(tracks[i][0], 10);\r\n\r\n            if (tracks[i].indexOf('w') !== -1) { //MASTER VOLUME\r\n                let index = tracks[i].indexOf('w') + 1;\r\n                let num = \"\";\r\n                while (tracks[i][index] >= '0' && tracks[i][index] <= '9') {\r\n                    num += tracks[i][index];\r\n                    index++;\r\n                }\r\n                state.volume = parseInt(num, 10);\r\n            }\r\n            if (tracks[i].indexOf('t') !== -1) { //MASTER TEMPO\r\n                let index = tracks[i].indexOf('t') + 1;\r\n                let num = \"\";\r\n                while (tracks[i][index] >= '0' && tracks[i][index] <= '9') {\r\n                    num += tracks[i][index];\r\n                    index++;\r\n                }\r\n                state.tempo = parseInt(num, 10);\r\n            }\r\n\r\n            if (tracks[i].indexOf('@') !== -1) { //INSTRUMENT\r\n                let instrument = tracks[i][tracks[i].indexOf('@') + 1];\r\n                switch (instrument) {\r\n                    case '0':\r\n                        state.tracks[track].instrument = state.instruments[0];\r\n                        break;\r\n                    case '1':\r\n                        state.tracks[track].instrument = state.instruments[1];\r\n                        break;\r\n                    case '3':\r\n                        state.tracks[track].instrument = state.instruments[2];\r\n                        break;\r\n                    case '8':\r\n                        state.tracks[track].instrument = state.instruments[3];\r\n                        break;\r\n                    case '9':\r\n                        state.tracks[track].instrument = state.instruments[4];\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            if (tracks[i].indexOf('v') !== -1) { //VOLUME\r\n                let index = tracks[i].indexOf('v') + 1;\r\n                let num = \"\";\r\n                while (tracks[i][index] >= '0' && tracks[i][index] <= '9') {\r\n                    num += tracks[i][index];\r\n                    index++;\r\n                }\r\n                state.tracks[track].volume = parseInt(num, 10);\r\n            }\r\n            if (tracks[i].indexOf('o') !== -1) { //OCTAVE\r\n                let index = tracks[i].indexOf('o') + 1;\r\n                let num = \"\";\r\n                while (tracks[i][index] >= '0' && tracks[i][index] <= '9') {\r\n                    num += tracks[i][index];\r\n                    index++;\r\n                }\r\n                state.tracks[track].octave_start = parseInt(num, 10); //THIS IS IMPORTANT <-------\r\n            }\r\n            if (tracks[i].indexOf('l') !== -1) { //NOTE LENGTH\r\n                let index = tracks[i].indexOf('l') + 1;\r\n                let num = \"\";\r\n                while (tracks[i][index] >= '0' && tracks[i][index] <= '9') {\r\n                    num += tracks[i][index];\r\n                    index++;\r\n                }\r\n                state.tracks[track].default_length = parseInt(num, 10); //THIS IS IMPORTANT <-------\r\n            }\r\n\r\n            //note time!\r\n            var currOctave = state.tracks[track].octave_start;\r\n            var note = -1;\r\n            var notes = [];\r\n            var location = 1;\r\n            var start = tracks[i].length;\r\n            if (tracks[i].indexOf('a') < start && tracks[i].indexOf('a') > 0) start = tracks[i].indexOf('a');\r\n            if (tracks[i].indexOf('b') < start && tracks[i].indexOf('b') > 0) start = tracks[i].indexOf('b');\r\n            if (tracks[i].indexOf('c') < start && tracks[i].indexOf('c') > 0) start = tracks[i].indexOf('c');\r\n            if (tracks[i].indexOf('d') < start && tracks[i].indexOf('d') > 0) start = tracks[i].indexOf('d');\r\n            if (tracks[i].indexOf('e') < start && tracks[i].indexOf('e') > 0) start = tracks[i].indexOf('e');\r\n            if (tracks[i].indexOf('f') < start && tracks[i].indexOf('f') > 0) start = tracks[i].indexOf('f');\r\n            if (tracks[i].indexOf('g') < start && tracks[i].indexOf('g') > 0) start = tracks[i].indexOf('g');\r\n            if (tracks[i].indexOf('r') < start && tracks[i].indexOf('r') > 0) start = tracks[i].indexOf('r');\r\n            for (let n = start; n < tracks[i].length; n++) {\r\n                let isRest = false;\r\n                if (\"abcdefgr\".indexOf(tracks[i][n]) !== -1) {\r\n                    if (tracks[i][n] === 'r') {\r\n                        isRest = true;\r\n                    } else {\r\n                        note++;\r\n                        if (notes[note] === undefined) notes.push(new Note());\r\n                        notes[note].note = tracks[i][n];\r\n                        notes[note].length = 16 / state.tracks[track].default_length;\r\n                        notes[note].octave = currOctave;\r\n                        notes[note].location = location;\r\n                    }\r\n                    if (state.tracks[track].default_length !== -1) location += 16 / state.tracks[track].default_length;\r\n                }\r\n                if (tracks[i][n] >= '0' && tracks[i][n] <= '9') {\r\n                    let num = \"\";\r\n                    while (tracks[i][n] >= '0' && tracks[i][n] <= '9') {\r\n                        num += tracks[i][n];\r\n                        n++;\r\n                    }\r\n                    n--;\r\n                    if (!isRest) notes[note].length = 16 / parseInt(num, 10);\r\n                    location += 16 / parseInt(num, 10);\r\n                }\r\n                isRest = false;\r\n                if (tracks[i][n] === '+') notes[note].sharp = true;\r\n                if (tracks[i][n] === '<') currOctave--;\r\n                if (tracks[i][n] === '>') currOctave++;\r\n            }\r\n            state.tracks[track].notes = notes;\r\n        }\r\n\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default Parser;","class Updater {\r\n    static update(text, state) {\r\n        var tracks = text.split(\"#\");\r\n\r\n        let notesExist = false;\r\n        for(let i = 0; i < state.tracks.length; i++)\r\n            if(state.tracks[i].notes.length !== 0)\r\n                notesExist = true;\r\n        \r\n        if(!notesExist && tracks.length === 1) \r\n            return text;\r\n        \r\n        //At this point there are notes.\r\n\r\n        //if(tracks.length === 1) { //Notes must be set up and tracks must be inserted.\r\n        if(true) {\r\n\r\n            text = \"#amk 2\\n\\n\";\r\n            for(let i = 0; i < state.tracks.length; i++) {\r\n                if(state.tracks[i].notes.length !== 0) {\r\n                    //Header\r\n                    text += \"#\" + i;\r\n                    if(i === 0) {\r\n                        text += \" w\" + state.volume + \" t\" + state.tempo;\r\n                    }\r\n                    text += \"\\n@\" + this.getInstrument(state.tracks[i].instrument) + \" v\" + state.tracks[i].volume + \" o\" + state.tracks[i].octave_start;\r\n                    if(state.tracks[i].default_length !== -1) {\r\n                        text += \" l\" + state.tracks[i].default_length;\r\n                    }\r\n                    text += \"\\n\\n\"\r\n                    \r\n                    //Notes!!!1!!\r\n                    var currOctave = state.tracks[i].octave_start;\r\n                    for(let n = 0; n < state.tracks[i].notes.length; n++) {\r\n                        while(state.tracks[i].notes[n].octave > currOctave) {\r\n                            currOctave++;\r\n                            text += '>';\r\n                        }\r\n                        while(state.tracks[i].notes[n].octave < currOctave) {\r\n                            currOctave--;\r\n                            text += '<';\r\n                        }\r\n                        text += state.tracks[i].notes[n].note;\r\n                        if(state.tracks[i].notes[n].sharp) text += '+';\r\n                        if(this.noteToLength(state.tracks[i].notes[n].length) !== state.tracks[i].default_length) {\r\n                            text += this.noteToLength(state.tracks[i].notes[n].length);\r\n                        }\r\n                    }\r\n                    text += \"\\n\\n\";\r\n                }\r\n            }\r\n\r\n        } else { //Update existing text\r\n            text = \"\"; //rip lol\r\n\r\n            for(let i = 0; i < tracks.length; i++) {\r\n                let track = parseInt(tracks[i][0], 10);\r\n                if(tracks[i].indexOf('@') !== -1) { //INSTRUMENT\r\n                    let instrument = tracks[i][tracks[i].indexOf('@') + 1];\r\n                    if(this.getInstrumentName(instrument) !== state.tracks[track].instrument) {\r\n                        tracks[i] = this.setCharAt(tracks[i], tracks[i].indexOf('@') + 1, this.getInstrument(state.tracks[track].instrument));\r\n                    }\r\n                }\r\n                \r\n            }\r\n\r\n            for(let i = 1; i < tracks.length; i++)\r\n                text += \"#\"+tracks[i];\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    static getInstrument(instrument) {\r\n        switch (instrument) {\r\n            case 'Flute':\r\n                return '0';\r\n            case 'Strings':\r\n                return '1';\r\n            case 'Marimba':\r\n                return '3';\r\n            case 'Bass':\r\n                return '8';\r\n            case 'Piano':\r\n                return '9';\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    static getInstrumentName(instrument){\r\n        switch (instrument) {\r\n            case '0':\r\n                return 'Flute';\r\n            case '1':\r\n                return 'Strings';\r\n            case '3':\r\n                return 'Marimba';\r\n            case '8':\r\n                return 'Bass';\r\n            case '9':\r\n                return 'Piano';\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    static setCharAt(str,index,chr) {\r\n        if(index > str.length-1) return str;\r\n        return str.substring(0,index) + chr + str.substring(index+1);\r\n    }\r\n\r\n    static noteToLength(note) {\r\n        switch(note) {\r\n            case 1:\r\n                return 16;\r\n            case 2:\r\n                return 8;\r\n            case 3:\r\n                return 6;\r\n            case 4:\r\n                return 4;\r\n            case 5:\r\n            case 6:\r\n                return 3;\r\n            case 7:\r\n            case 8:\r\n                return 2;\r\n            case 9:\r\n            case 10:\r\n            case 11:\r\n            case 12:\r\n            case 13:\r\n            case 14:\r\n            case 15:\r\n            case 16: \r\n                return 1;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Updater;","import React from 'react';\r\n\r\nimport Text from \"./components/textarea.jsx\";\r\nimport Editor from \"./components/editorarea.jsx\";\r\n\r\nimport Track from \"./api/track.js\";\r\nimport Parser from \"./api/readText.js\";\r\nimport Updater from \"./api/updateText.js\";\r\nimport Note from './api/note.js';\r\nimport { numToName } from './components/TrackPianoRoll/PianoKey/index.jsx';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //Institiate any objects from api\r\n    var tracks = [];\r\n    for (let i = 0; i < Track.MAX_TRACK_NUM; i += 1) tracks.push(new Track(i));\r\n\r\n    this.state = {\r\n      //Syntax Data\r\n      example: false,\r\n      tracks: tracks,\r\n      volume: 255, //0-255\r\n      tempo: 40, //Tempo is BPM * 0.4 | Values are 0-60 but can go higher.\r\n      \r\n      //Other Data\r\n      instruments: ['Flute', 'Strings', 'Marimba', 'Bass', 'Piano'], //@0 @1 @3 @8 @9 respectiveley\r\n      currTrack: 0,\r\n      text: \"Paste your AddmusicK compatible syntax text here.\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState(this.state);\r\n  }\r\n\r\n  //Editor Area Handlers (These should all end with updateText())\r\n  setCurrTrack = (currTrack) => {\r\n    this.setState({ currTrack: currTrack });\r\n    this.updateText(this.state);\r\n  }\r\n\r\n  setCurrInstr = (selectedInstrument) => {\r\n    var tracks = this.state.tracks;\r\n    tracks[this.state.currTrack].instrument = selectedInstrument;\r\n    this.setState({ tracks: tracks });\r\n    this.updateText(this.state);\r\n  }\r\n\r\n  addNote = (location, pitch, octave) => {\r\n    var tracks = this.state.tracks;\r\n    var note = new Note();\r\n    note.location = location;\r\n    note.note = numToName[pitch][0].toLowerCase();\r\n    if (numToName[pitch][1] === '#') note.sharp = true;\r\n    note.octave = octave;\r\n    tracks[this.state.currTrack].notes.push(note);\r\n    this.setState({ tracks });\r\n    this.updateText(this.state);\r\n  }\r\n\r\n  removeNote = (index) => {\r\n    const tracks = this.state.tracks;\r\n    tracks[this.state.currTrack].notes.splice(index, 1);\r\n    this.setState({ tracks });\r\n    this.updateText(this.state);\r\n  }\r\n\r\n  replaceNote = (noteInfo) => {\r\n    const { note, index } = noteInfo;\r\n    const pitch = note.note;\r\n    const tracks = this.state.tracks;\r\n    note.note = numToName[pitch][0].toLowerCase();\r\n    note.sharp = numToName[pitch][1] === '#';\r\n    tracks[this.state.currTrack].notes.splice(index, 1, note);\r\n    this.setState({ tracks });\r\n    this.updateText(this.state);\r\n  }\r\n\r\n  setNoteLength = (length, index) => {\r\n    if (length < 1) return;\r\n    const tracks = this.state.tracks;\r\n    const note = tracks[this.state.currTrack].notes[index];\r\n    note.length = length;\r\n\r\n    for (let i = 0; i < tracks[this.state.currTrack].notes.length; i += 1) {\r\n      if (i !== index && tracks[this.state.currTrack].notes[i].location <= note.location + length - 1\r\n        && tracks[this.state.currTrack].notes[i].location + tracks[this.state.currTrack].notes[i].length - 1 >= note.location) return;\r\n    }\r\n    tracks[this.state.currTrack].notes[index] = note;\r\n    this.setState({ tracks });\r\n    this.updateText(this.state);\r\n  }\r\n\r\n  changeTrackLength = (length) => {\r\n    const tracks = this.state.tracks;\r\n    tracks[this.state.currTrack].track_length = length;\r\n    this.setState({ tracks });\r\n    this.updateText(this.state);\r\n  }\r\n\r\n  changeMeasureLength = (length) => {\r\n    const tracks = this.state.tracks;\r\n    tracks[this.state.currTrack].measure_length = length;\r\n    this.setState({ tracks });\r\n    this.updateText(this.state);\r\n  }\r\n\r\n  //Text Area Handlers\r\n  setText = (event) => {\r\n    this.setState({ text: event.target.value });\r\n  }\r\n\r\n  parseText = (text) => {\r\n    this.setState(Parser.parse(this.state, text));\r\n  }\r\n\r\n  updateText = (state) => {\r\n    this.setState({ text: Updater.update(this.state.text, state) });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"main\">\r\n\r\n        <Editor\r\n          //Give any variables from state it uses.\r\n          example={this.state.example}\r\n          instruments={this.state.instruments}\r\n          tracks={this.state.tracks}\r\n          currTrack={this.state.currTrack}\r\n          \r\n          //Pass down functions. Any function that edits the state should be written here then passed down.\r\n          setCurrTrack={this.setCurrTrack}\r\n          setCurrInstr={this.setCurrInstr}\r\n          addNote={this.addNote}\r\n          removeNote={this.removeNote}\r\n          replaceNote={this.replaceNote}\r\n          setNoteLength = {this.setNoteLength}\r\n          changeTrackLength={this.changeTrackLength}\r\n          changeMeasureLength={this.changeMeasureLength}\r\n          />\r\n          \r\n        <Text\r\n          text={this.state.text}\r\n\r\n          setText={this.setText}\r\n          parseText={this.parseText}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app.jsx';\r\n\r\nimport './styles/index.css';\r\nimport './styles/text.css';\r\nimport './styles/pianoroll.css';\r\nimport './styles/instrument-menu.css';\r\nimport './styles/track-piano-roll.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}